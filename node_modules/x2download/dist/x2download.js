"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const get_video_info_1 = __importDefault(require("./core/get-video-info"));
const create_conversion_job_1 = __importDefault(require("./core/create-conversion-job"));
const convert_video_1 = __importDefault(require("./core/convert-video"));
class X2download {
    corsProxyUrl;
    info;
    constructor({ corsProxyUrl } = {}) {
        this.corsProxyUrl = corsProxyUrl;
    }
    async getInfo(url) {
        const info = await (0, get_video_info_1.default)({
            videoUrl: url,
            corsProxyUrl: this.corsProxyUrl
        });
        this.info = info;
        return info;
    }
    async getFileUrl({ format, info }) {
        if (info) {
            this.info = info;
        }
        if (!this.info) {
            throw new Error("No video information provided. Do a `.getInfo` or pass the information in the method call!");
        }
        const conversionResult = await (0, convert_video_1.default)({
            videoId: this.info.id,
            fileType: format.fileExtension,
            quality: format.quality,
            token: this.info.token,
            tokenExpiresAt: this.info.tokenExpiresAt,
            corsProxyUrl: this.corsProxyUrl
        });
        const conversionJobResult = await (0, create_conversion_job_1.default)({
            serverUrl: conversionResult.conversionServerUrl,
            videoId: this.info.id,
            fileType: format.fileExtension,
            fileName: this.info.fileName,
            quality: format.quality,
            token: this.info.token,
            tokenExpiresAt: this.info.tokenExpiresAt,
            corsProxyUrl: this.corsProxyUrl
        });
        if (!conversionJobResult.fileUrl) {
            throw new Error("Unable to get the video file url for an unknown reason!");
        }
        return conversionJobResult.fileUrl;
    }
}
exports.default = X2download;
