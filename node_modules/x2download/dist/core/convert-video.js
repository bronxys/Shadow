"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const axios_1 = __importDefault(require("axios"));
const form_data_1 = __importDefault(require("../form-data"));
function parseConvertVideoData(rawData) {
    const data = {
        conversionStatus: rawData.c_status,
        conversionServerUrl: rawData.c_server ?? rawData.d_url
    };
    if (!data.conversionServerUrl) {
        throw new Error(`Unable to get media conversion server url! Server response: ${rawData}`);
    }
    return data;
}
const defaultOptions = {
    client: "X2Download.app",
    requestOptions: {}
};
async function convertVideo({ videoId, fileType, quality, token, tokenExpiresAt, client = defaultOptions.client, requestOptions = defaultOptions.requestOptions, corsProxyUrl }) {
    const url = `${corsProxyUrl ?? ""}https://backend.svcenter.xyz/api/convert-by-45fc4be8916916ba3b8d61dd6e0d6994`;
    const formData = new form_data_1.default();
    formData.append("v_id", videoId);
    formData.append("ftype", fileType);
    formData.append("fquality", quality);
    formData.append("token", token);
    formData.append("timeExpire", String(tokenExpiresAt));
    formData.append("client", client);
    const headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0",
        "X-Requested-Key": "de0cfuirtgf67a",
        "Sec-Fetch-Site": "cross-site",
        ...formData.getHeaders()
    };
    const response = await axios_1.default.post(url, formData, { headers: headers, ...requestOptions });
    const data = parseConvertVideoData(response.data);
    return data;
}
exports.default = convertVideo;
