"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PixhostTO = void 0;
const genericImageUploadService_1 = require("./genericImageUploadService");
const form_data_1 = __importDefault(require("form-data"));
class PixhostTO extends genericImageUploadService_1.GenericImageUploadService {
    constructor() {
        super();
        this.uploadUrl = 'https://api.pixhost.to/images';
        this.imageDirectLinkRx = /class="image-img" src="(?<image_url>.+?)"/m;
        this.formFilename = 'img';
        this.uploadHeaders = Object.assign(Object.assign({}, this.headers), { 'x-requested-with': 'XMLHttpRequest', 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' });
    }
    async uploadFromBinary(imageData, filename) {
        const form = new form_data_1.default();
        form.append('content_type', 0);
        form.append(this.formFilename, imageData, {
            filename
        });
        let uploadResponse = await super.uploadFormData(form);
        if (uploadResponse.data.show_url) {
            return await this.getUploadedImageDirectUrl(uploadResponse.data.show_url, this.imageDirectLinkRx);
        }
        else {
            throw new Error(`Upload failed, got incorrect response status:${JSON.stringify(uploadResponse.data)}`);
        }
    }
}
exports.PixhostTO = PixhostTO;
//# sourceMappingURL=pixhostTO.js.map