"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadCC = void 0;
const genericImageUploadService_1 = require("./genericImageUploadService");
const form_data_1 = __importDefault(require("form-data"));
const axios_ddos_guard_bypass_1 = require("axios-ddos-guard-bypass");
class UploadCC extends genericImageUploadService_1.GenericImageUploadService {
    constructor() {
        super();
        this.serviceUrl = 'https://upload.cc';
        this.uploadUrl = 'https://upload.cc/image_upload';
        this.uploadHeaders = {
            Referer: this.serviceUrl
        };
        this.formFilename = 'uploaded_file[]';
        (0, axios_ddos_guard_bypass_1.ddosGuardBypass)(this.axios);
    }
    async uploadFromBinary(imageData, filename) {
        var _a;
        let form = new form_data_1.default();
        form.append(this.formFilename, imageData, {
            filename
        });
        let uploadResponse = await super.uploadFormData(form);
        if (((_a = uploadResponse.data) === null || _a === void 0 ? void 0 : _a.code) === 100 &&
            uploadResponse.data.total_success) {
            return {
                directLink: `${this.serviceUrl}/${uploadResponse.data.success_image[0].url}`
            };
        }
        else {
            throw new Error(`Upload failed, got incorrect response status:${JSON.stringify(uploadResponse.data)}`);
        }
    }
}
exports.UploadCC = UploadCC;
//# sourceMappingURL=uploadCC.js.map